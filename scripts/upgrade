#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

admin=$(ynh_user_get_info --username=$admin --key=username)
admin_mail=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd services..."

ynh_systemctl --service="$app-backend" --action="stop"
ynh_systemctl --service="$app-frontend" --action="stop"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression "Upgrading dependencies..."

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir" --full_replace --keep="backend/server/media"

chown -R "$app:www-data" "$install_dir"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating $app's configuration files..."

ynh_config_add --template=".env" --destination="$install_dir/.env"

#=================================================
# PREPARE A POSTGRESQL DATABASE
#=================================================
ynh_script_progression "Configuring the PostgreSQL database..."

#Create postgis extension
ynh_psql_db_shell <<< "ALTER USER $db_user WITH SUPERUSER;"
ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS postgis;"
ynh_psql_db_shell <<< "ALTER USER $db_user WITH NOSUPERUSER;"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression "Building $app's backend..."

pushd "$install_dir"/
    ynh_exec_as_app python3 -m venv "$install_dir/venv"
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/pip" install --upgrade pip
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/pip" install -r "$install_dir"/backend/server/requirements.txt
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/python" backend/server/manage.py collectstatic --noinput --verbosity 2
    ynh_hide_warnings ynh_exec_as_app "$install_dir/venv/bin/python" backend/server/manage.py migrate
    
    ynh_safe_rm "$install_dir/.cache/pip"
popd

ynh_script_progression "Building $app's frontend..."

pushd "$install_dir/frontend"
	export CYPRESS_INSTALL_BINARY=0
    ynh_hide_warnings corepack enable
    ynh_hide_warnings npm install -g corepack@latest
    ynh_hide_warnings ynh_exec_as_app corepack prepare pnpm@9 --activate
    ynh_hide_warnings ynh_exec_as_app CYPRESS_INSTALL_BINARY=0 NODE_OPTIONS="--max-old-space-size=3000" pnpm install --frozen-lockfile --aggregate-output
    ynh_hide_warnings ynh_exec_as_app CYPRESS_INSTALL_BINARY=0 NODE_OPTIONS="--max-old-space-size=3000" pnpm run build

    #remove unneeded files
    ynh_hide_warnings ynh_exec_as_app pnpm prune --prod --ignore-scripts
    ynh_hide_warnings ynh_exec_as_app pnpm store prune
popd

chown -R "$app":www-data "$install_dir"/


#=================================================
# REAPPLY SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_config_add_nginx

ynh_config_add_systemd --service="${app}-backend" --template="adventurelog-backend.service"
ynh_config_add_systemd --service="${app}-frontend" --template="adventurelog-frontend.service"

yunohost service add "${app}-backend" --description="AdventureLog backend service" --log="/var/log/$app/$app-backend.log"
yunohost service add "${app}-frontend" --description="AdventureLog frontend service" --log="/var/log/$app/$app-frontend.log"

ynh_config_add_logrotate
chown -R $app:$app /var/log/$app/

# ynh_config_add_fail2ban --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd services..."

ynh_systemctl --service="${app}-backend" --action="start"
ynh_systemctl --service="${app}-frontend" --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
